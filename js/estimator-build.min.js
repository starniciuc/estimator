var View = function(t) {
	return !1 == this instanceof View ? new View : (
			this.project = null, this.cache = t,
			this.entries = t.entries, this.questions = t.questions,
			this.current = t.entries[0], this.next = t.entries[1],
			this.finalEntry = t.finalEntry, this.currentMethod = null, void 0)
};
String.prototype.splice = function(idx, rem, s) {
	return (this.slice(0, idx) + s + this.slice(idx + Math.abs(rem)));
};
View.prototype.reset = function(t)
{
	this._switchViews(this.current, this.entries[1]),
			$(".flip-container").each(function(t, e)
	{
		$(e).removeClass("active")
	}),
			this.project = t
},
		View.prototype.updateBudget = function()
		{
			this._updateBars()
		},
		View.prototype.nextView = function()
		{
			this.next = this._returnNextView(),
					this._switchViews(this.current, this.next)
		},
		View.prototype.showBar = function()
		{
			this.cache.barContainer.slideDown()
		},
		View.prototype.hideBar = function()
		{
			this.cache.barContainer.slideUp()
		},
		View.prototype._switchViews = function(t, e)
		{
			//timpul de schimbare
			setTimeout(function()
			{
				$(t).fadeOut().queue(function()
				{
					$(e).fadeIn(), $(this).dequeue()
				})
			}, 100),
					this._setToCurrent(e),
					this.currentMethod = $(e).attr("data-method"),
					this.descriptionMethod = $(e).attr("data-description"),
					this.next = $(e).next(".js-entry")
		},
		View.prototype._returnNextView = function()
		{
			var t;
			return t = $(this.current).nextAll(".js-entry"),
					t === void 0 || 0 === t.length ? (this._callFinalEntry(), this.finalEntry) : t.first()
		},
		View.prototype._setToCurrent = function(t)
		{
			var e = this;
			$(e.current).off("click"), e.current = t;
			var i = $(t);
			i.hasClass("js-entry-final") || $(t).on("click", function(t)
			{
				e._delegateEntryClick(t)
			})
		},
		View.prototype._delegateEntryClick = function(t)
		{
			var e, i;
			this.project.prepareBudget();
			return e = $(t.target).parents(".flip-container"),
					e.toggleClass("active"),
					t.preventDefault(),
					t.target.src ? (i =
							{
								value: e.attr("data-value"),
								image: t.target.src,
								description: this.descriptionMethod,
								budgetConstant: e.attr("data-constant"),
								budgetMultiplier: e.attr("data-multiplier"),
								budgetPercent: e.attr("data-percent")
							},
					this.project.handleAnswer(this.currentMethod, i),
							this.nextView(), void 0) : !1
		},
		View.prototype._callFinalEntry = function() {
			var t = this;
			this.project.prepareBudget();
			$(".logo-winify").fadeOut();
			var e = this.cache.scopeList,
					i = $(".invoice .js-scope li");
			i.each(function() {
				$(this).detach()
			});
			var n = this.project.prepareList();
			this._createListElements(e, $(i[0]), n),
					this.cache.submitButton.click(function() {
						t.project.submitProject()
					})
			this.hideBar();
			$.ajax({
				type: "POST",
				url: "autosender.php",
				data: $("#submitForm").serialize(),
				beforeSend: function() {
					
				},
				success: function() {
					
				}
			});
		},
		View.prototype._createListElements = function(t, e, i)
		{
			var budget = this.project.budget.total;
			var n;
			var m = "";
			$.each(i, function(s) {
				n = e.clone(), $(n).find(".text p").text(i[s].value), $(n).find(".text span").text(i[s].description), $(n).find(".image img").attr("src", i[s].image), t.append(n);
				m += i[s].value + "//";
			});
			var g = document.createElement("input");
			g.setAttribute("type", "hidden"), g.setAttribute("name", "values");
			g.setAttribute("value", m),
					$("#submitForm").prepend(g);
			
			var mDesc = "";
			$.each(i, function(s) {
				mDesc += i[s].description + "//";
			});
			
			var gDesc = document.createElement("input");
			gDesc.setAttribute("type", "hidden"), gDesc.setAttribute("name", "valuesDesc");
			gDesc.setAttribute("value", mDesc),
			$("#submitForm").prepend(gDesc);
			
			var a = document.createElement("input");
			a.setAttribute("type", "hidden"),
					a.setAttribute("name", "budget"),
					a.setAttribute("value", budget),
					$("#submitForm").prepend(a);
		},
//progress bar, curent buget!! 
		View.prototype._updateBars = function() {
			var t = this.project.budget.bar;
			t.bar.css("width", t.position + "%"), t.outputText.text(this.project.budget.total), t.outputPosition.css("left", t.position + "%")
		};
var numView = 0;//Conter iteration
var countView = $("div[data-method]").length;//number of div method
var totalEstimate = 0;
var urlToRequest = function() {
	var t = "website.php?dir=app&";
	//console.log(Project.prototype.outputFeatures().toString());
	//this.project.postToUrl(t, this.project.outputFeatures())

};
var Bar = function(t, e, i) {
	return !1 == this instanceof Bar ? new Bar : (this.budget = t, this.project = e, this.view = i, this.position = 0, this.bar = i.cache.bar, this.outputText = i.cache.budgetAverage, this.outputPosition = i.cache.budgetAverageParent, void 0)
};
//Width progress bar
Bar.prototype.calculateWidths = function() {
	numView++,
			this.position = 100 * (numView / countView)
};
//Set buget data
var Budget = function(t, e) {
	return !1 == this instanceof Budget ? new Budget : (this.project = t, this.view = e, this.bar = new Bar(this, t, e), this.total = 0, this.rate = 0, this.constants = [], this.multipliers = 1, void 0)
};

Budget.prototype.update = function(t)
{
	t.budgetConstant !== void 0 && this._addConstant(t.budgetConstant), t.budgetMultiplier !== void 0 && this._addMultiplier(t.budgetMultiplier), t.budgetPercent !== void 0 && this._addPercent(t.budgetPercent), this._updateBudget(), this.updateView()
},
		Budget.prototype.updateView = function()
		{
			this.bar.calculateWidths(), this.view.updateBudget()
		},
		Budget.prototype._addMultiplier = function(t)
		{

			this.multipliers *= parseFloat(t)
			//(this.multipliers == 0)? parseFloat(t):((parseFloat(t)<2 && parseFloat(t)>1)?parseFloat(t)-1:parseFloat(t))

		},
		Budget.prototype._addPercent = function(t)
		{
			//console.log(totalEstimate);
			//console.log(t);
			totalEstimate *= parseFloat(t);
			//totalEstimate = Math.ceil(totalEstimate)
			//console.log(totalEstimate);
		},
		Budget.prototype._addConstant = function(t)
		{
			this.constants.push(t)
		},
		Budget.prototype.roundBudget = function(t)
		{
			a = t % 1000;
			if (a <= 500) {
				if (a != 0) {
					t -= a;
					t += 500;
				}
			}
			else {
				t -= a;
				t += 1000;
			}
			//console.log(t);
			return t
		},
		Budget.prototype.separationBuget = function(t) {
			if (t > 999) {
				a = t.toString();
				a = a.splice(-3, 0, ".");
			} else {
				a = t;
			}
			return a;
		},
		Budget.prototype._updateBudget = function()
		{
			this.total = this.separationBuget(this.roundBudget(this._calculate(this.constants, this.multipliers) * pth));

		},
		Budget.prototype._calculate = function(t, e)
		{
			var i, n, s, temp;
			//   console.log("input hour = "+ t.slice().toString());
			for (n = t.slice(), s = e, i = 0; n.length; ) {
				if (numView != 0) {
					//console.log(n.length);
					if (n.length == 11) {
						temp = n.pop();
						//console.log(temp);
					} else {
						temp = n.pop() * ((s == 0) ? 1 : s);
					}
					//console.log(s);
					//console.log(temp);
					i += parseInt(Math.ceil(temp), 10);
				}
				else
				{
					i += parseInt(n.pop(), 10);
					//console.log(i);
				}
				break;
			}

			totalEstimate += Math.ceil(i);
			i = totalEstimate;
			//console.log(i*30);
			return i
		};

//Project prototip
var Project = function(t) {
	return !1 == this instanceof Project ? new Project : (
			this.view = t,
			this.budget = new Budget(this, t),
			this.type = null,
			this.output = {information: null, budget: null},
	this.features = {
		device: null,
		"interface": null,
		login: null,
		payments: null,
		paymentsss: null,
		sync: null,
		profiles: null,
		ratings: null,
		design: null,
		progress: null,
		integration: null,
		wtype: null,
		based: null,
		languages: null,
		responsive: null,
		marketing: null,
		graphics: null,
		wproject: null,
		app: null
	},
	this.data = null, void 0)
};

Project.prototype.calculateBudget = function()
{
	return this.budget.calculate()
},
		Project.prototype.handleAnswer = function(t, e)
		{
			this._handlers[t](this, e), this.budget.update(e)
		},
		Project.prototype.prepareList = function()
		{
			var t = [];
			t[0] = {
				value: (typeof this.wtype != 'undefined') ? this.wtype.value : this.type.value,
				image: (typeof this.wtype != 'undefined') ? this.wtype.image : this.type.image,
				description: (typeof this.wtype != 'undefined') ? this.wtype.description : this.type.description
			};
			for (var e in this.features)
				this.features.hasOwnProperty(e) && this.features[e] && t.push(this.features[e]);
			return this.output = t, t
		},
		//Append total buget estimate
		Project.prototype.prepareBudget = function()
		{
			this.view.cache.total.text(this.budget.total), this.output.budget = {
				total: this.budget.total
			}
		},
		Project.prototype.postToUrl = function(t, e, i, f)
		{
			console.log("submited");
			i = i || "get";
			f = f || "sub";
			var n = document.createElement("form");
			n.setAttribute("method", i), n.setAttribute("action", t);
			var s = document.createElement("input");
			s.setAttribute("type", "hidden"), s.setAttribute("name", "features");
			for (var r = "", u = 1; this.output.length > u; u++)
				r += this.output[u].value + "//";
			s.setAttribute("value", r), n.appendChild(s);

			var g = document.createElement("input");
			g.setAttribute("type", "hidden"), g.setAttribute("name", "images");
			for (var m = "", u = 1; this.output.length > u; u++)
				m += this.output[u].image + "//";
			g.setAttribute("value", m), n.appendChild(g);

			var q = document.createElement("input");
			q.setAttribute("type", "hidden"), q.setAttribute("name", "descriptions");
			for (var br = "", u = 1; this.output.length > u; u++) {
				br += this.output[u].description + "//";
				//console.log(br);
			}
			q.setAttribute("value", br), n.appendChild(q);

			var a = document.createElement("input");
			a.setAttribute("type", "hidden"), a.setAttribute("name", "budget"), a.setAttribute("value", this.budget.total), n.appendChild(a);

			var p = document.createElement("input");
			p.setAttribute("type", "hidden"), p.setAttribute("name", "dir"), p.setAttribute("value", f), n.appendChild(p);
			var o = document.createElement("input");
			o.setAttribute("type", "hidden"), o.setAttribute("name", "type"), o.setAttribute("value", (typeof this.wtype != 'undefined') ? this.wtype.value : this.type.value), n.appendChild(o);
			var b = document.createElement("input");
			b.setAttribute("type", "hidden"), b.setAttribute("name", "image"), b.setAttribute("value", (typeof this.wtype != 'undefined') ? this.wtype.image : this.type.image), n.appendChild(b);
			var desc = document.createElement("input");
			desc.setAttribute("type", "hidden"),
					desc.setAttribute("name", "description"),
					desc.setAttribute("value", (typeof this.wtype != 'undefined') ? this.wtype.description : this.type.description), n.appendChild(desc),
					document.body.appendChild(n),
					n.submit()
		},
		Project.prototype.submitProject = function()
		{
			var t = ProjectEstimator.getSubmitURL();
			this.postToUrl(t, this.output.features)
		},
		Project.prototype.outputFeatures = function()
		{
			var t = this.output.features;
			return t
		},
		Project.prototype.shareProject = function()
		{
			var t = ProjectEstimator.getShareURL();
			this.postToUrl(t, this.output.features)
		},
		Project.prototype._handlers = {
			type: function(t, e) {
				t.type = {}, t._setValues(t.type, e),
						t.view.showBar()
			},
			wtype: function(t, e) {
				t.wtype = {}, t._setValues(t.wtype, e),
						t.view.showBar()
			},
			device: function(t, e) {
				(t.features.device = {}, t._setValues(t.features.device, e))
			},
			"interface": function(t, e) {
				(t.features.interface = {},
						t._setValues(t.features.interface, e))

			},
			login: function(t, e) {
				(t.features.login = {},
						t._setValues(t.features.login, e))
			},
			based: function(t, e) {
				(t.features.based = {}, t._setValues(t.features.based, e))
			},
			languages: function(t, e) {
				(t.features.languages = {}, t._setValues(t.features.languages, e))
			},
			marketing: function(t, e) {
				(t.features.marketing = {}, t._setValues(t.features.marketing, e))
			},
			responsive: function(t, e) {
				(t.features.responsive = {}, t._setValues(t.features.responsive, e))
			},
			wproject: function(t, e) {
				(t.features.wproject = {}, t._setValues(t.features.wproject, e))
			},
			app: function(t, e) {
				if (e.value == "Ja") {
					t.prepareList();
					t.postToUrl("mobile.php", t.output, "POST", "web")
				}
				(t.features.app = {}, t._setValues(t.features.app, e))
			},
			payments: function(t, e) {
				(t.features.payments = {}, t._setValues(t.features.payments, e))
			},
			paymentsss: function(t, e) {
				(t.features.paymentsss = {}, t._setValues(t.features.paymentsss, e))
			},
			sync: function(t, e) {
				(t.features.sync = {}, t._setValues(t.features.sync, e))
			},
			ratings: function(t, e) {
				(t.features.ratings = {}, t._setValues(t.features.ratings, e))

			},
			profiles: function(t, e) {
				(t.features.profiles = {}, t._setValues(t.features.profiles, e))
			},
			integration: function(t, e) {
				if (e.value == "Ja") {
					t.prepareList();
					t.postToUrl("website.php", t.output, "POST", "app")

				}
				(t.features.integration = {}, t._setValues(t.features.integration, e))
						, t.view.showBar()
			},
			icon: function(t, e) {

				(t.features.icon = {}, t._setValues(t.features.icon, e))
			},
			graphics: function(t, e) {
				(t.features.ratings = {}, t._setValues(t.features.graphics, e))

			},
			design: function(t, e) {
				(t.features.design = {}, t._setValues(t.features.design, e))
			},
			progress: function(t, e) {
				t.features.progress = {}, t._setValues(t.features.progress, e)
			}
		},
Project.prototype._setValues = function(t, e) {
	t.value = e.value,
			t.image = e.image,
			t.description = e.description
};